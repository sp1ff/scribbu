\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename scribbu.info
@settitle scribbu
@c %**end of header
@copying
The extensible tool for tagging your music collection.

Copyright @copyright{} 2018  Michael Herstine

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
A copy of the license is included in the section entitled ``GNU
Free Documentation License''.

A copy of the license is also available from the Free Software
Foundation Web site at @url{https://www.gnu.org/licenses/fdl.html}.

@end quotation

This document was typeset with
@uref{http://www.texinfo.org/, GNU Texinfo}.

@end copying

@titlepage
@title scribbu
@subtitle The extensible tool for tagging your music collection
@author @email{sp1ff@@pobox.com}
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c Output the table of the contents at the beginning.
@contents

@ifnottex
@node Top
@top scribbu

The extensible tool for tagging your music collection.

@insertcopying

@c Generate the nodes for this menu with `C-c C-u C-m'.
@menu
* Introduction::
* Scripting scribbu::
* Copying This Manual::
* Index::
@end menu

@c If I don't include the menu in the ifnottex block, texinfo
@c complains when I generate pdf...
@end ifnottex

@c Update all node entries with `C-c C-u C-n'.
@c Insert new nodes with `C-c C-c n'.

@node Introduction
@chapter Introduction
@cindex Introduction

scribbu is a C++ library & associated command-line tool for working
with ID3-tagged files (presumably music). In addition to making the
library available to C++ programmers, the scribbu command embeds
Guile, allowing it to be scripted using Scheme (a LISP dialect).

It was born when I retired my last Windows machine & could no longer
use Winamp to manage my library of digital music. It is very crude
presently; I'm building it out as I discover features I want.

scribbu can be invoked in a few ways:

@enumerate
@item
with a Scheme expression (@option{-e}, @option{--expression}) or
Scheme file (@option{-f}, @option{--file}).  In this case, scribbu
will evaluate the given program & exit.

@item
with no arguments at all. In this case, scribbu will drop into a
Scheme shell in which the user can evaluate arbitrary Scheme
expressions.

@item
with a sub-command & relevant options & arguments.  scribbu implements
the following sub-commands:

@enumerate
@item
@command{scribbu dump} will write the contents of any & all ID3 tags
found in one or more files to stdout.

@item
@command{scribbu rename} will rename one or more files based on the
contents of their ID3 tags; e.g. `scribbu rename -t %A-%T.mp3 *.mp3'
will rename all the files matching *.mp3 to
<artist>-<title>.mp3 where "artist" and "title" are derived
from their ID3 tags (if any).

@item
@command{scribbu report} will generate a report listing ID3 attributes
on one or more files on stdout.  Only CSV format is supported
currently.

@item
@command{scribbu split} will split one file into many; with each new
file corresponding to some component of the input file: ID3v1 tag,
data, and/or ID3v2 tag(s).

@end enumerate

@end enumerate

Any sub-command can be invoked with @option{--help} or @option{-h} for
more information. Add the @option{--info} option to display this
manual

@c add nodes for each sbu-command

@node Scripting scribbu
@chapter Scripting scribbu

You can script scribbu using Scheme.

@node Copying This Manual
@appendix Copying This Manual

@c Get fdl.texi from https://www.gnu.org/licenses/fdl.html
@include fdl-1.3.texi

@node Index
@unnumbered Index

@printindex cp

@bye

@c scribbu.texi ends here
